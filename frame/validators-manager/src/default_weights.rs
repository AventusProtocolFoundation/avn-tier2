// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_validators_manager
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2022-04-06, STEPS: [50, ], REPEAT: 20, LOW RANGE: [], HIGH RANGE: []
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./avn-node-bench-postv3
// benchmark
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_validators_manager
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --heap-pages=4096
// --template=./frame-weight-template.hbs
// --output
// val_manager_bench.rs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_validators_manager.
pub trait WeightInfo {
	fn add_validator() -> Weight;
	fn remove_validator(v: u32, ) -> Weight;
	fn approve_action_with_end_voting(v: u32, ) -> Weight;
	fn approve_action_without_end_voting(v: u32, ) -> Weight;
	fn reject_action_with_end_voting(v: u32, ) -> Weight;
	fn reject_action_without_end_voting(v: u32, ) -> Weight;
	fn end_voting_period_with_rejected_valid_actions(o: u32, ) -> Weight;
	fn end_voting_period_with_approved_invalid_actions(o: u32, ) -> Weight;
	fn bond() -> Weight;
	fn nominate(n: u32, ) -> Weight;
	fn signed_bond() -> Weight;
	fn signed_bond_extra() -> Weight;
	fn signed_unbond() -> Weight;
	fn signed_set_payee() -> Weight;
	fn set_staking_configs() -> Weight;
	fn update_validator_preference() -> Weight;
	fn signed_payout_all_validators_and_stakers(n: u32, ) -> Weight;
}

/// Weights for pallet_validators_manager using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn add_validator() -> Weight {
		(231_323_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(10 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	fn remove_validator(v: u32, ) -> Weight {
		(180_990_000 as Weight)
			// Standard Error: 214_000
			.saturating_add((469_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	fn approve_action_with_end_voting(v: u32, ) -> Weight {
		(854_285_000 as Weight)
			// Standard Error: 811_000
			.saturating_add((6_097_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(10 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	fn approve_action_without_end_voting(v: u32, ) -> Weight {
		(564_541_000 as Weight)
			// Standard Error: 663_000
			.saturating_add((3_060_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn reject_action_with_end_voting(v: u32, ) -> Weight {
		(284_284_000 as Weight)
			// Standard Error: 236_000
			.saturating_add((2_038_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn reject_action_without_end_voting(v: u32, ) -> Weight {
		(168_809_000 as Weight)
			// Standard Error: 81_000
			.saturating_add((607_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn end_voting_period_with_rejected_valid_actions(o: u32, ) -> Weight {
		(314_672_000 as Weight)
			// Standard Error: 928_000
			.saturating_add((10_790_000 as Weight).saturating_mul(o as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(o as Weight)))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	fn end_voting_period_with_approved_invalid_actions(o: u32, ) -> Weight {
		(135_191_000 as Weight)
			// Standard Error: 378_000
			.saturating_add((12_734_000 as Weight).saturating_mul(o as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(o as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn bond() -> Weight {
		(188_632_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn nominate(n: u32, ) -> Weight {
		(134_084_000 as Weight)
			// Standard Error: 78_000
			.saturating_add((13_074_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(n as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn signed_bond() -> Weight {
		(318_274_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	fn signed_bond_extra() -> Weight {
		(269_313_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn signed_unbond() -> Weight {
		(255_203_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn signed_set_payee() -> Weight {
		(159_242_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn set_staking_configs() -> Weight {
		(10_260_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn update_validator_preference() -> Weight {
		(80_981_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn signed_payout_all_validators_and_stakers(n: u32, ) -> Weight {
		(2_129_722_000 as Weight)
			// Standard Error: 292_000
			.saturating_add((447_967_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(68 as Weight))
			.saturating_add(T::DbWeight::get().reads((2 as Weight).saturating_mul(n as Weight)))
			.saturating_add(T::DbWeight::get().writes(41 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(n as Weight)))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn add_validator() -> Weight {
		(231_323_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(10 as Weight))
			.saturating_add(RocksDbWeight::get().writes(9 as Weight))
	}
	fn remove_validator(v: u32, ) -> Weight {
		(180_990_000 as Weight)
			// Standard Error: 214_000
			.saturating_add((469_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(8 as Weight))
			.saturating_add(RocksDbWeight::get().writes(7 as Weight))
	}
	fn approve_action_with_end_voting(v: u32, ) -> Weight {
		(854_285_000 as Weight)
			// Standard Error: 811_000
			.saturating_add((6_097_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(10 as Weight))
			.saturating_add(RocksDbWeight::get().writes(6 as Weight))
	}
	fn approve_action_without_end_voting(v: u32, ) -> Weight {
		(564_541_000 as Weight)
			// Standard Error: 663_000
			.saturating_add((3_060_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(7 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn reject_action_with_end_voting(v: u32, ) -> Weight {
		(284_284_000 as Weight)
			// Standard Error: 236_000
			.saturating_add((2_038_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn reject_action_without_end_voting(v: u32, ) -> Weight {
		(168_809_000 as Weight)
			// Standard Error: 81_000
			.saturating_add((607_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn end_voting_period_with_rejected_valid_actions(o: u32, ) -> Weight {
		(314_672_000 as Weight)
			// Standard Error: 928_000
			.saturating_add((10_790_000 as Weight).saturating_mul(o as Weight))
			.saturating_add(RocksDbWeight::get().reads(8 as Weight))
			.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(o as Weight)))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	fn end_voting_period_with_approved_invalid_actions(o: u32, ) -> Weight {
		(135_191_000 as Weight)
			// Standard Error: 378_000
			.saturating_add((12_734_000 as Weight).saturating_mul(o as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(o as Weight)))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn bond() -> Weight {
		(188_632_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(7 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
	fn nominate(n: u32, ) -> Weight {
		(134_084_000 as Weight)
			// Standard Error: 78_000
			.saturating_add((13_074_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(RocksDbWeight::get().reads(6 as Weight))
			.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(n as Weight)))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn signed_bond() -> Weight {
		(318_274_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(8 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	fn signed_bond_extra() -> Weight {
		(269_313_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn signed_unbond() -> Weight {
		(255_203_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn signed_set_payee() -> Weight {
		(159_242_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn set_staking_configs() -> Weight {
		(10_260_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn update_validator_preference() -> Weight {
		(80_981_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn signed_payout_all_validators_and_stakers(n: u32, ) -> Weight {
		(2_129_722_000 as Weight)
			// Standard Error: 292_000
			.saturating_add((447_967_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(RocksDbWeight::get().reads(68 as Weight))
			.saturating_add(RocksDbWeight::get().reads((2 as Weight).saturating_mul(n as Weight)))
			.saturating_add(RocksDbWeight::get().writes(41 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(n as Weight)))
	}
}